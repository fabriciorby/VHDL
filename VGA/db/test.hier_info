|test
switch => normal_video_word[0].DATAIN
switch => normal_video_word[1].DATAIN
switch => normal_video_address[14].ENA
switch => normal_video_address[13].ENA
switch => normal_video_address[12].ENA
switch => normal_video_address[11].ENA
switch => normal_video_address[10].ENA
switch => normal_video_address[9].ENA
switch => normal_video_address[8].ENA
switch => normal_video_address[7].ENA
switch => normal_video_address[6].ENA
switch => normal_video_address[5].ENA
switch => normal_video_address[4].ENA
switch => normal_video_address[3].ENA
switch => normal_video_address[2].ENA
switch => normal_video_address[1].ENA
switch => normal_video_address[0].ENA
clk27M => vgacon:vga_component.clk27M
clk27M => clear_video_word[0].CLK
clk27M => clear_video_word[1].CLK
clk27M => clear_video_word[2].CLK
clk27M => clear_video_address[0].CLK
clk27M => clear_video_address[1].CLK
clk27M => clear_video_address[2].CLK
clk27M => clear_video_address[3].CLK
clk27M => clear_video_address[4].CLK
clk27M => clear_video_address[5].CLK
clk27M => clear_video_address[6].CLK
clk27M => clear_video_address[7].CLK
clk27M => clear_video_address[8].CLK
clk27M => clear_video_address[9].CLK
clk27M => clear_video_address[10].CLK
clk27M => clear_video_address[11].CLK
clk27M => clear_video_address[12].CLK
clk27M => clear_video_address[13].CLK
clk27M => clear_video_address[14].CLK
clk27M => state.CLK
clk27M => slow_clock.CLK
clk27M => \clock_divider:i[0].CLK
clk27M => \clock_divider:i[1].CLK
clk27M => \clock_divider:i[2].CLK
clk27M => \clock_divider:i[3].CLK
clk27M => \clock_divider:i[4].CLK
clk27M => \clock_divider:i[5].CLK
clk27M => \clock_divider:i[6].CLK
clk27M => \clock_divider:i[7].CLK
clk27M => \clock_divider:i[8].CLK
clk27M => \clock_divider:i[9].CLK
clk27M => \clock_divider:i[10].CLK
clk27M => \clock_divider:i[11].CLK
clk27M => \clock_divider:i[12].CLK
clk27M => \clock_divider:i[13].CLK
clk27M => \clock_divider:i[14].CLK
clk27M => \clock_divider:i[15].CLK
clk27M => \clock_divider:i[16].CLK
clk27M => \clock_divider:i[17].CLK
clk27M => \clock_divider:i[18].CLK
clk27M => \clock_divider:i[19].CLK
clk27M => \clock_divider:i[20].CLK
clk27M => \clock_divider:i[21].CLK
clk27M => \clock_divider:i[22].CLK
clk27M => \clock_divider:i[23].CLK
clk27M => \clock_divider:i[24].CLK
clk27M => \clock_divider:i[25].CLK
clk27M => \clock_divider:i[26].CLK
clk27M => \clock_divider:i[27].CLK
clk27M => \clock_divider:i[28].CLK
clk27M => \clock_divider:i[29].CLK
clk27M => \clock_divider:i[30].CLK
clk27M => \clock_divider:i[31].CLK
clk27M => vgacon:vga_component.write_clk
reset => vgacon:vga_component.rstn
reset => slow_clock.ACLR
reset => \clock_divider:i[0].ACLR
reset => \clock_divider:i[1].ACLR
reset => \clock_divider:i[2].ACLR
reset => \clock_divider:i[3].ACLR
reset => \clock_divider:i[4].ACLR
reset => \clock_divider:i[5].ACLR
reset => \clock_divider:i[6].ACLR
reset => \clock_divider:i[7].ACLR
reset => \clock_divider:i[8].ACLR
reset => \clock_divider:i[9].ACLR
reset => \clock_divider:i[10].ACLR
reset => \clock_divider:i[11].ACLR
reset => \clock_divider:i[12].ACLR
reset => \clock_divider:i[13].ACLR
reset => \clock_divider:i[14].ACLR
reset => \clock_divider:i[15].ACLR
reset => \clock_divider:i[16].ACLR
reset => \clock_divider:i[17].ACLR
reset => \clock_divider:i[18].ACLR
reset => \clock_divider:i[19].ACLR
reset => \clock_divider:i[20].ACLR
reset => \clock_divider:i[21].ACLR
reset => \clock_divider:i[22].ACLR
reset => \clock_divider:i[23].ACLR
reset => \clock_divider:i[24].ACLR
reset => \clock_divider:i[25].ACLR
reset => \clock_divider:i[26].ACLR
reset => \clock_divider:i[27].ACLR
reset => \clock_divider:i[28].ACLR
reset => \clock_divider:i[29].ACLR
reset => \clock_divider:i[30].ACLR
reset => \clock_divider:i[31].ACLR
reset => normal_video_word[0].ACLR
reset => normal_video_word[1].ACLR
reset => normal_video_word[2].ACLR
reset => normal_video_address[0].ACLR
reset => normal_video_address[1].ACLR
reset => normal_video_address[2].ACLR
reset => normal_video_address[3].ACLR
reset => normal_video_address[4].ACLR
reset => normal_video_address[5].ACLR
reset => normal_video_address[6].ACLR
reset => normal_video_address[7].ACLR
reset => normal_video_address[8].ACLR
reset => normal_video_address[9].ACLR
reset => normal_video_address[10].ACLR
reset => normal_video_address[11].ACLR
reset => normal_video_address[12].ACLR
reset => normal_video_address[13].ACLR
reset => normal_video_address[14].ACLR
reset => clear_video_word[0].ACLR
reset => clear_video_word[1].ACLR
reset => clear_video_word[2].ACLR
reset => clear_video_address[0].ACLR
reset => clear_video_address[1].ACLR
reset => clear_video_address[2].ACLR
reset => clear_video_address[3].ACLR
reset => clear_video_address[4].ACLR
reset => clear_video_address[5].ACLR
reset => clear_video_address[6].ACLR
reset => clear_video_address[7].ACLR
reset => clear_video_address[8].ACLR
reset => clear_video_address[9].ACLR
reset => clear_video_address[10].ACLR
reset => clear_video_address[11].ACLR
reset => clear_video_address[12].ACLR
reset => clear_video_address[13].ACLR
reset => clear_video_address[14].ACLR
reset => state.PRESET
VGA_R[0] <= vgacon:vga_component.red[0]
VGA_R[1] <= vgacon:vga_component.red[1]
VGA_R[2] <= vgacon:vga_component.red[2]
VGA_R[3] <= vgacon:vga_component.red[3]
VGA_G[0] <= vgacon:vga_component.green[0]
VGA_G[1] <= vgacon:vga_component.green[1]
VGA_G[2] <= vgacon:vga_component.green[2]
VGA_G[3] <= vgacon:vga_component.green[3]
VGA_B[0] <= vgacon:vga_component.blue[0]
VGA_B[1] <= vgacon:vga_component.blue[1]
VGA_B[2] <= vgacon:vga_component.blue[2]
VGA_B[3] <= vgacon:vga_component.blue[3]
VGA_HS <= vgacon:vga_component.hsync
VGA_VS <= vgacon:vga_component.vsync


|test|vgacon:vga_component
clk27M => vga_pll:divider.inclk0
rstn => h_count_d[0].ACLR
rstn => h_count_d[1].ACLR
rstn => h_count_d[2].ACLR
rstn => h_count_d[3].ACLR
rstn => h_count_d[4].ACLR
rstn => h_count_d[5].ACLR
rstn => h_count_d[6].ACLR
rstn => h_count_d[7].ACLR
rstn => h_count_d[8].ACLR
rstn => h_count_d[9].ACLR
rstn => h_count[0].ACLR
rstn => h_count[1].ACLR
rstn => h_count[2].ACLR
rstn => h_count[3].ACLR
rstn => h_count[4].ACLR
rstn => h_count[5].ACLR
rstn => h_count[6].ACLR
rstn => h_count[7].ACLR
rstn => h_count[8].ACLR
rstn => h_count[9].ACLR
rstn => v_count_d[0].ACLR
rstn => v_count_d[1].ACLR
rstn => v_count_d[2].ACLR
rstn => v_count_d[3].ACLR
rstn => v_count_d[4].ACLR
rstn => v_count_d[5].ACLR
rstn => v_count_d[6].ACLR
rstn => v_count_d[7].ACLR
rstn => v_count_d[8].ACLR
rstn => v_count_d[9].ACLR
rstn => v_count[0].ACLR
rstn => v_count[1].ACLR
rstn => v_count[2].ACLR
rstn => v_count[3].ACLR
rstn => v_count[4].ACLR
rstn => v_count[5].ACLR
rstn => v_count[6].ACLR
rstn => v_count[7].ACLR
rstn => v_count[8].ACLR
rstn => v_count[9].ACLR
write_clk => dual_clock_ram:vgamem.write_clk
write_enable => dual_clock_ram:vgamem.we
write_addr[0] => dual_clock_ram:vgamem.write_address[0]
write_addr[1] => dual_clock_ram:vgamem.write_address[1]
write_addr[2] => dual_clock_ram:vgamem.write_address[2]
write_addr[3] => dual_clock_ram:vgamem.write_address[3]
write_addr[4] => dual_clock_ram:vgamem.write_address[4]
write_addr[5] => dual_clock_ram:vgamem.write_address[5]
write_addr[6] => dual_clock_ram:vgamem.write_address[6]
write_addr[7] => dual_clock_ram:vgamem.write_address[7]
write_addr[8] => dual_clock_ram:vgamem.write_address[8]
write_addr[9] => dual_clock_ram:vgamem.write_address[9]
write_addr[10] => dual_clock_ram:vgamem.write_address[10]
write_addr[11] => dual_clock_ram:vgamem.write_address[11]
write_addr[12] => dual_clock_ram:vgamem.write_address[12]
write_addr[13] => dual_clock_ram:vgamem.write_address[13]
write_addr[14] => dual_clock_ram:vgamem.write_address[14]
data_in[0] => dual_clock_ram:vgamem.data_in[0]
data_in[1] => dual_clock_ram:vgamem.data_in[1]
data_in[2] => dual_clock_ram:vgamem.data_in[2]
vga_clk <= vga_pll:divider.c0
red[0] <= red.DB_MAX_OUTPUT_PORT_TYPE
red[1] <= red.DB_MAX_OUTPUT_PORT_TYPE
red[2] <= red.DB_MAX_OUTPUT_PORT_TYPE
red[3] <= red.DB_MAX_OUTPUT_PORT_TYPE
green[0] <= green.DB_MAX_OUTPUT_PORT_TYPE
green[1] <= green.DB_MAX_OUTPUT_PORT_TYPE
green[2] <= green.DB_MAX_OUTPUT_PORT_TYPE
green[3] <= green.DB_MAX_OUTPUT_PORT_TYPE
blue[0] <= blue.DB_MAX_OUTPUT_PORT_TYPE
blue[1] <= blue.DB_MAX_OUTPUT_PORT_TYPE
blue[2] <= blue.DB_MAX_OUTPUT_PORT_TYPE
blue[3] <= blue.DB_MAX_OUTPUT_PORT_TYPE
hsync <= sync.DB_MAX_OUTPUT_PORT_TYPE
vsync <= sync.DB_MAX_OUTPUT_PORT_TYPE


|test|vgacon:vga_component|vga_pll:divider
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]


|test|vgacon:vga_component|vga_pll:divider|altpll:altpll_component
inclk[0] => pll.CLK
inclk[1] => ~NO_FANOUT~
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= sclkout1.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|test|vgacon:vga_component|dual_clock_ram:vgamem
read_clk => data_out[0]~reg0.CLK
read_clk => data_out[1]~reg0.CLK
read_clk => data_out[2]~reg0.CLK
write_clk => ram_block~18.CLK
write_clk => ram_block~0.CLK
write_clk => ram_block~1.CLK
write_clk => ram_block~2.CLK
write_clk => ram_block~3.CLK
write_clk => ram_block~4.CLK
write_clk => ram_block~5.CLK
write_clk => ram_block~6.CLK
write_clk => ram_block~7.CLK
write_clk => ram_block~8.CLK
write_clk => ram_block~9.CLK
write_clk => ram_block~10.CLK
write_clk => ram_block~11.CLK
write_clk => ram_block~12.CLK
write_clk => ram_block~13.CLK
write_clk => ram_block~14.CLK
write_clk => ram_block~15.CLK
write_clk => ram_block~16.CLK
write_clk => ram_block~17.CLK
write_clk => ram_block.CLK0
data_in[0] => ram_block~17.DATAIN
data_in[0] => ram_block.DATAIN
data_in[1] => ram_block~16.DATAIN
data_in[1] => ram_block.DATAIN1
data_in[2] => ram_block~15.DATAIN
data_in[2] => ram_block.DATAIN2
write_address[0] => ram_block~14.DATAIN
write_address[0] => ram_block.WADDR
write_address[1] => ram_block~13.DATAIN
write_address[1] => ram_block.WADDR1
write_address[2] => ram_block~12.DATAIN
write_address[2] => ram_block.WADDR2
write_address[3] => ram_block~11.DATAIN
write_address[3] => ram_block.WADDR3
write_address[4] => ram_block~10.DATAIN
write_address[4] => ram_block.WADDR4
write_address[5] => ram_block~9.DATAIN
write_address[5] => ram_block.WADDR5
write_address[6] => ram_block~8.DATAIN
write_address[6] => ram_block.WADDR6
write_address[7] => ram_block~7.DATAIN
write_address[7] => ram_block.WADDR7
write_address[8] => ram_block~6.DATAIN
write_address[8] => ram_block.WADDR8
write_address[9] => ram_block~5.DATAIN
write_address[9] => ram_block.WADDR9
write_address[10] => ram_block~4.DATAIN
write_address[10] => ram_block.WADDR10
write_address[11] => ram_block~3.DATAIN
write_address[11] => ram_block.WADDR11
write_address[12] => ram_block~2.DATAIN
write_address[12] => ram_block.WADDR12
write_address[13] => ram_block~1.DATAIN
write_address[13] => ram_block.WADDR13
write_address[14] => ram_block~0.DATAIN
write_address[14] => ram_block.WADDR14
read_address[0] => ram_block.RADDR
read_address[1] => ram_block.RADDR1
read_address[2] => ram_block.RADDR2
read_address[3] => ram_block.RADDR3
read_address[4] => ram_block.RADDR4
read_address[5] => ram_block.RADDR5
read_address[6] => ram_block.RADDR6
read_address[7] => ram_block.RADDR7
read_address[8] => ram_block.RADDR8
read_address[9] => ram_block.RADDR9
read_address[10] => ram_block.RADDR10
read_address[11] => ram_block.RADDR11
read_address[12] => ram_block.RADDR12
read_address[13] => ram_block.RADDR13
read_address[14] => ram_block.RADDR14
we => ram_block~18.DATAIN
we => ram_block.WE
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


